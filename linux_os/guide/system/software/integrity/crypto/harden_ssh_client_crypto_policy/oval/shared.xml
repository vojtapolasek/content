{{#
  Macro to define the criterion of the OVAL check (Criterion definition).
  Based on macro defined in shared/macros-oval.jinja, but it uses parameter to derive a suffix therefore allowing to create more entities of criterium in one file.
  This macro can take three parameters:
    - path (String): Path to the configuration file to be checked.
    - parameter (String): The parameter to be checked in the configuration file.
    - missing_parameter_pass (boolean): If set, the check will also pass if the parameter is not present in the configuration file (default is applied).
#}}
{{%- macro oval_line_in_file_criterion(path='', parameter='', missing_parameter_pass=false) -%}}
{{%- set suffix_id = parameter -%}}
{{%- set prefix_text = "Check the" -%}}
{{%- if missing_parameter_pass %}}
{{%- set suffix_id = parameter ~ "_default_not_overriden" -%}}
{{%- set prefix_text = prefix_text + " absence of" -%}}
{{%- endif %}}
      <criterion comment="{{{ prefix_text }}} {{{ parameter }}} in {{{ path }}}"
      test_ref="test_{{{ rule_id }}}{{{ suffix_id }}}" />
{{%- endmacro %}}

{{#
  Macro to define the OVAL test to be constructed (Test definition).
  Based on macro defined in shared/macros-oval.jinja, but it uses parameter to derive a suffix therefore allowing to create more entities tests in one file.
  This macro can take three parameters:
    - path (String): Path to the configuration file to be checked.
    - parameter (String): The parameter to be checked in the configuration file.
    - missing_parameter_pass (boolean): If set, the check will also pass if the parameter is not present in the configuration file (default is applied).
#}}
{{%- macro oval_line_in_file_test(path='', parameter='', missing_parameter_pass=false) -%}}
{{%- set suffix_id = parameter -%}}
{{%- if missing_parameter_pass %}}
{{%- set check_existence = "none_exist" -%}}
{{%- set prefix_text = "value" -%}}
{{%- set suffix_id = parameter ~ "_default_not_overriden" -%}}
{{%- else %}}
{{%- set check_existence = "all_exist" -%}}
{{%- set prefix_text = "absence" -%}}
{{%- endif %}}
  <ind:textfilecontent54_test check="all" check_existence="{{{ check_existence }}}"
  comment="tests the {{{ prefix_text }}} of {{{ parameter }}} setting in the {{{ path }}} file"
  id="test_{{{ rule_id }}}{{{ suffix_id }}}" version="1">
  <ind:object object_ref="obj_{{{ rule_id }}}{{{ suffix_id }}}" />
  {{%- if not missing_parameter_pass %}}
  <ind:state state_ref="state_{{{ rule_id }}}{{{ suffix_id }}}" />
  {{%- endif %}}
  </ind:textfilecontent54_test>
{{%- endmacro %}}

{{#
  Macro to check if a parameter in a configuration file is set (Object definition).
  Based on macro defined in shared/macros-oval.jinja, but it uses parameter to derive a suffix therefore allowing to create more entities of object in one file.
  This macro can take six parameters:
    - path (String): Path to the configuration file to be checked.
    - section (String): If set, the parameter will be checked only within the given section defined by [section].
    - prefix_regex (String): Regular expression to be used in the beginning of the OVAL text file content check.
    - parameter (String): The parameter to be checked in the configuration file.
    - separator_regex (String): Regular expression to be used as the separator of parameter and value in a configuration file. If spaces are allowed, this should be included in the regular expression.
    - missing_parameter_pass (boolean): If set, the check will also pass if the parameter is not present in the configuration file (default is applied).
#}}
{{%- macro oval_line_in_file_object(path='', section='', prefix_regex='^[\s]*', parameter='', separator_regex='[\s]+', missing_parameter_pass=false) -%}}
{{%- set suffix_id = parameter -%}}
{{%- if section %}}
{{%- set common_regex = "^\s*\["+section+"\].*(?:\\n\s*[^[\s].*)*\\n"+prefix_regex+parameter+separator_regex -%}}
{{%- if missing_parameter_pass %}}
{{#
  There is no need for having a regular expression with a capture
  group "(\S*)" when checking if the parameter is not present in
  the configuration file.
#}}
{{%- set regex = common_regex -%}}
{{%- else %}}
{{%- set regex = common_regex+"(\S*)\s*(?:|(?:#.*))?$" -%}}
{{%- endif %}}
{{%- else %}}
{{%- if missing_parameter_pass %}}
{{%- set suffix_id = parameter ~ "_default_not_overriden" -%}}
{{#
  There is no need for having a regular expression with a capture
  group "(.*)" when checking if the parameter is not present in
  the configuration file.
#}}
{{%- set regex = prefix_regex+parameter+separator_regex -%}}
{{%- else %}}
{{%- set regex = prefix_regex+parameter+separator_regex+"(.*)[\s]*(?:|(?:#.*))?$" -%}}
{{%- endif %}}
{{%- endif %}}
  <ind:textfilecontent54_object id="obj_{{{ rule_id }}}{{{ suffix_id }}}" version="1">
    <ind:filepath>{{{ path }}}</ind:filepath>
    <ind:pattern operation="pattern match">{{{ regex }}}</ind:pattern>
    <ind:instance operation="greater than or equal" datatype="int">1</ind:instance>
  </ind:textfilecontent54_object>
{{%- endmacro %}}

{{#
  Macro to check if a expected value can be found in the extracted information of an OVAL object (State definition).
  This macro can take two parameters:
    - value (String): The value to be checked. This can also be a regular expression (e.g: value1|value2 can match both values).
    - multi_value (boolean): If set, it means that the parameter can accept multiple values and the expected value must be present in the current list of values.
#}}
{{%- macro oval_line_in_file_state(value='', multi_value='') -%}}
{{%- if multi_value %}}
{{%- set regex = "^.*"+value+".*$" -%}}
{{%- else %}}
{{%- set regex = "^"+value+"$" -%}}
{{%- endif %}}
  <ind:textfilecontent54_state id="state_{{{ rule_id }}}" version="1">
    <ind:subexpression datatype="string" operation="pattern match">{{{ regex }}}</ind:subexpression>
  </ind:textfilecontent54_state>
{{%- endmacro %}}


<def-group>
  <definition class="compliance" id="harden_ssh_client_crypto_policy" version="3">
    <metadata>
      <title>Harden SSH client Crypto Policy</title>
      <affected family="unix">
        <platform>multi_platform_wrlinux</platform>
        <platform>multi_platform_rhel</platform>
        <platform>multi_platform_fedora</platform>
        <platform>multi_platform_ol</platform>
      </affected>
      <description>Look for specific parameters in /etc/ssh/ssh_config.d/02-ospp.conf</description>
    </metadata>
    <criteria comment="SSH client is configured correctly"
    operator="AND">
        {{{ oval_line_in_file_criterion(path='/etc/ssh/ssh_config.d/02-ospp.conf', parameter='Ciphers') }}}
    </criteria>
  </definition>
  {{{ oval_line_in_file_test(path='/etc/ssh/ssh_config.d/02-ospp.conf', parameter='Ciphers', missing_parameter_pass=false) }}}
  {{{ oval_line_in_file_object(path='/etc/ssh/ssh_config.d/02-ospp.conf', parameter='Ciphers', separator_regex='[\s]+', missing_parameter_pass=false) }}}
  {{{ oval_line_in_file_state(value='aes256-ctr,aes256-cbc,aes128-ctr,aes128-cbc') }}}
</def-group>